generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  isAdmin       Boolean   @default(false)
  phoneNumber   String?

  accounts Account[]
  sessions Session[]
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  products Product[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String
  description String
  price       Float
  image       String?
  stock       Int
  deleted     Boolean @default(false)

  categories     Category[]
  ProductsOrders ProductsOrders[]
}

model Order {
  id                Int              @id @default(autoincrement())
  orderDate         DateTime
  deliveryAddressId Int
  customerId        String
  isSent            Boolean          @default(false)
  ProductsOrders    ProductsOrders[]
}

model Address {
  id           Int    @id @default(autoincrement())
  customerId   String
  streetAdress String
  zipCode      Int
  city         String
}

model ProductsOrders {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
}
